= content_for :title, "Faça Acontecer: "
.row[ng-controller='SubscriptionCtrl']
  section.form-wrap
    header
    .subscription-form.large-12.columns
      = simple_form_for @user, url: users_path, method: :post, html: { "data-abide" => true } do |usr|
        
        
        /// PERSONAL FIELDS

        article.user-personal-info.row
          .large-12.columns
            h3.text-center 
              |Insira seus dados pessoais
          .large-3.columns= usr.input :first_name, input_html: { required: true } 
          .large-3.columns= usr.input :last_name, input_html: { required: true }
          .large-3.columns= usr.input :cpf, input_html: { class: 'cpf-mask', required: true  }
          .large-3.columns= usr.input :birthday, as: :string, input_html: { class: 'date-mask', required: true }
          .large-5.columns= usr.input :email, input_html: { required: true, pattern: 'email' }
          .large-3.columns.end= usr.input :phone, input_html: { class: 'phone-mask', required: true }

        //// ADDRESS FIELDS
        
        article.user-address-info.row
          // @subscriber
          // Address info for the subscriber
          .large-12.columns
            h3.text-center
              | Endereço
          .large-12.columns
            .row
              .large-3.columns
                = usr.input :postal_code, input_html: { required: true, class: 'zipcode-mask', "ng-model" => "zipcode", "ng-blur" => 'getZipcodeData()' } 
          .large-12.columns
            .row
              .large-5.columns= usr.input :address_street, input_html: { required: true, "ng-model" => "address_street" }
              .large-2.columns= usr.input :address_number, input_html: { required: true }
              .large-4.columns.end= usr.input :address_extra, input_html: { required: true }
            .row
              .large-3.columns= usr.input :address_district, input_html: { required: true, "ng-model" => "address_district" }
              .large-3.columns= usr.input :city, input_html: { required: true, "ng-model" => "city" }
              // address_states located @ application_helper
              .large-3.columns.end= usr.input :state, as: :select, collection: address_states, prompt: 'Selecione...', input_html: { "ng-model" => "state" }

          .hidden.country
            = usr.input :country, as: :string, input_html: { value: 'BRA' }


        = usr.simple_fields_for :subscriptions, @user.subscriptions.last do |sub|
          article.subscription-plans.row
            .large-12.columns
              h3.text-center 
                |Que tipo de doação deseja efetuar?
              .text-center.selected-radio-button
                = sub.input :plan, as: :radio_buttons, collection: available_subscription_intervals, input_html: { required: true, "ng-model" => "plan"}





          article.subcription-donation-info.row
            // @subscription
            // Subscription options
           
            h3.text-center 
              |Qual valor você deseja doar?

            .subscription-choose-option.text-center
              em Escolha um plano para poder escolher um valor
            
            // All these helpers methods are located @ application_helper
            div.tabs-content.hidden-option.hidden
              #monthly.content.active
                .interval-info.pulse
                  p
                    |O valor escolhido vai ser doado mensalmente. (Apenas através do seu cartão de crédito)
                .monthly.subscription-values.monthly-values.selected-radio-button
                  = sub.input :value, as: :radio_buttons, label_field: false, collection: available_monthly_plans
    
              #biannual.content
                .interval-info
                  p
                    |O valor escolhido vai ser doado semestralmente. (Qualquer forma de pagamento) 
                .biannual.subscription-values.biannual-values.selected-radio-button
                  = sub.input :value, as: :radio_buttons, label_field: false, collection: available_biannual_plans

              #annual.content
                .interval-info
                  p
                    |O valor escolhido vai ser doado uma única vez. (Qualquer forma de pagamento) 
                .annual.subscription-values.annual-values.selected-radio-button
                  = sub.input :value, as: :radio_buttons, label_field: false, collection: available_annual_plans


              .subscription-project
                = sub.input :project_id, as: :hidden, input_html: { value: Project.first.id }


          article.subscription-payment-options.row
            .large-12.columns
              h3.text-center
                |Qual a forma de pagamento?
              .subscription-choose-option.text-center
                em Escolha um plano para poder escolher uma forma de pagamento
            
              // @subscription
              // Where the user chooses between CREDIT CARD/ SLIP / BANK ACCOUNT

              .payment-options.hidden
                // available_payment_options: application_helper
                .text-center= sub.input :payment_option, as: :radio_buttons, collection: available_payment_options, input_html: {  required: true, "ng-model" => "payment_option", class: 'has-tip ', "data-tooltip" => ""}



          article.subscription-payment-fields.debit.hidden.row
            .debit-wrap.text-center
              .large-12.columns
                h3 Escolha seu banco 
              .debit-fields
                .large-12.columns
                  = sub.input :bank, as: :radio_buttons, label: false, item_wrapper_class: "bank1", collection: available_payment_banks
                  = sub.full_error :bank



        article.subscription-payment-fields.creditcard.hidden.row
          // @subscription
          // If there are any required payment fields (like Account holder for Credit Card)
          .card-wrap
            .large-12.columns.text-center
              h3 Dados do seu cartão
            .card-fields
              = usr.simple_fields_for :creditcard do |credit|
                .large-5.columns= credit.input :holder, input_html: { "ng-model" => "card_holder", "ng-required" => "isCreditCard()", autocomplete: "off" }
                .large-5.columns= credit.input :cardnumber, input_html: { class: 'creditcard-mask', pattern: "card", "ng-model" => "card_number", "ng-required" => "isCreditCard()", autocomplete: "off" }
                .large-2.columns.end= credit.input :expiration, input_html: { class: 'expiration-mask', "ng-model" => "card_expire", "ng-required" => "isCreditCard()", autocomplete: "off" }


        footer.button-action.row
          .large-4.large-centered.columns
            = usr.submit "Contribuir!", class: :animated, data: { disable_with: 'Aguarde...' }






javascript:
  // Saving references in order to use it with jQuery 
  // See application.js file.
  // DO NOT ALTER the value of  .last
  window.$zipcode   = "#{@user.postal_code}";
  window.$value     = "#{@user.subscriptions.last.value.to_i}";
  window.$payment   = "#{@user.subscriptions.last.payment_option}";
  window.$plan      = "#{@user.subscriptions.last.plan}";
